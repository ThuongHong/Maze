DataBase 
{
    TABLE:
    {
        FOR NOW JUST GAME_SAVE
        'game_save' (
            'id' : int -> GamePlay Index Unique for each game -> PRIMARY KEY with AUTOINCREMENT,
            'times': real -> How many time has pass,
            'moves': int -> How many moves that user already play
        )
    }
}

GamePlay (
    Scale -> Zoom in Zoom out,
    Maze_size,
    Grid_size,
    Start_coord, End_coord -> Top left of screen while draw Maze and Character -> Moving Maze,
    ** kwargs
        -- new_maze : str : represent 3 thing below given a iterable, e.g [True, True] or [True, False] or [False, <game_index>]
        -- is_generate_new_maze : bool
        
        -- is_select_position: bool -> given when is_generate_new_maze is True
            -- Then give two position
        
        -- game_index : int -> given when is_load_maze is True
)
-- init()
    -- Khởi tạo Maze nhưng chưa generate
-- generate(algorithm)
    -- Khởi tạo maze dựa trên thuật toán đầu vào
-- spawn random()
    -- Spawn vị trí Tom một cách ngấu nhiên sau đó tạo player
-- choose_position_spawn(start, end) -> bool:
    -- Dùng interface hoặc textbox để lấy input và truyền vào phương thức này
    -- Hàm này thưc hiện spawn và tạo player sau đó hàm trả về True nếu start và end thõa 
    -- Hàm này trả về False nếu không có đường nối giữa hai điểm này, có thể xử lý ở interface 
        -- Lấy input mới và tryền vào
        -- Hỏi user có muốn spawn hay random
-- create_player()
    -- Support cho hai method trên, chia nhỏ để dễ quản lý
-- check_win()
    -- Chỉnh game_state thành win nếu player đã đến đích
    -- Gọi phương thức lưu leaderboard nếu win
-- save_leaderboard()
    -- Chuyện về database tính sau
-- save_game()
    -- Phương thức này lưu lại file game để sau load lại chứ k phải save như leaderboard
-- visualize_process(algorithm)
    -- Visualize thuật toán
    -- Chỉnh các thuộc tính như sau
        -- Chỉnh thuộc tính draw_process thành True
        -- Chỉnh thuộc tính solve_maze_algorithm thành thuật toán truyền vào, để mặc định là BFS
-- visualize_solution(algorithm)
    -- Tương tự phương thức trên nhưng chỉnh thuộc tính draw_solution thay vì draw_process
-- Phương thức de_visualize_process, de_visualize_solution như cái tên của nó


-- Maze
    --

-- Character
    -- 

